image: docker:20.10.16

services:
  - docker:20.10.16-dind

variables:
  DOCKER_TLS_CERTDIR: '/certs'
  DOCKER_REGISTRY: $CI_REGISTRY
  DOCKER_IMAGE_BACKEND: $CI_PROJECT_NAME-backend
  DOCKER_IMAGE_FRONTEND: $CI_PROJECT_NAME-frontend
  DOCKER_TAG: latest
  DATABASE_URL: 'postgresql://gotdle_user:topSecret!@localhost:5432/gotdle_db'
  JWT_SECRET: 'Y3ENPeUZytfd5ReL5e4Yb92azjUMNmC8'

stages:
  - test
  - build
  - deploy

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_JOB_TOKEN" "$CI_REGISTRY"


# testBackend:
#   stage: test
#   image: node:22
#   script:
#     - cd backend
#     - npm install
#     - npm test

# testFrontendComponent:
#   stage: test
#   image: node:22
#   script:
#     - cd frontend
#     - rm package-lock.json
#     - npm install
#     - npm test

build-backend:
  stage: build
  script:
    - cd backend
    - echo "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY" "$CI_REGISTRY_USER"
    - docker build -t "$CI_REGISTRY_IMAGE/backend:$DOCKER_TAG" .
    - docker push "$CI_REGISTRY_IMAGE/backend:$DOCKER_TAG"
  only:
      - main

build-frontend:
  stage: build
  script:
    - cd frontend
    - docker build -t "$CI_REGISTRY_IMAGE/frontend:$DOCKER_TAG" .
    - docker push "$CI_REGISTRY_IMAGE/frontend:$DOCKER_TAG"
  only:
      - main

deploy:
  stage: deploy
  image: debian
  before_script:
    - echo "$SSH_DEPLOY_KEY" | base64 -d > key
    - chmod 600 key
    - ssh-keyscan -H "$SSH_DEPLOY_IP" > ~/.ssh/known_hosts
  script:
    - ssh -i key $SSH_DEPLOY_USER@$SSH_DEPLOY_IP 'cd /home/ubuntu/dev/gotdle; export $productionToken; ./deploy.sh'
  


