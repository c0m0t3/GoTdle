openapi: 3.1.0
x-stoplight:
  id: r22nrccomf06q
info:
  title: openAPI_GoTdle
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /users/login:
    post:
      summary: Login User
      tags: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    x-stoplight:
                      id: csbuxo0nu5grn
      operationId: postUserLogin
      x-stoplight:
        id: pcn6mii5j09ru
      description: "Login user with email or username. \r\nIf successfully logged in, the user receives an access token in return."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
                - password
                - type
              properties:
                identifier:
                  type: string
                  x-stoplight:
                    id: 70kn59eiopl9n
                password:
                  type: string
                  x-stoplight:
                    id: vxsr2zgap0rkf
                  format: password
                type:
                  type: string
                  x-stoplight:
                    id: goxsbqooowmk1
  /users:
    post:
      summary: Create New User
      operationId: postUserRegister
      responses:
        '201':
          description: User Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    x-stoplight:
                      id: c4nomhcwen07j
                    properties:
                      id:
                        type: string
                        x-stoplight:
                          id: l9mi9r5kj33w8
                        format: uuid
                      email:
                        type: string
                        x-stoplight:
                          id: hhthtd8upp0q7
                        format: email
                      username:
                        type: string
                        x-stoplight:
                          id: r6bcleardrmxa
                      createdAt:
                        type: string
                        x-stoplight:
                          id: r7xzu1z1sxm37
                        format: date-time
        '409':
          description: Username/Email already exists
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - username
              properties:
                email:
                  type: string
                password:
                  type: string
                  x-stoplight:
                    id: 6b25cmy6ykyih
                username:
                  type: string
                  x-stoplight:
                    id: pwwp3l11ur1c9
            examples:
              Example 1:
                value:
                  username: string
                  email: string
                  password: string
        description: "Necessary fields to create an user:\r\n- username\r\n- email\r\n- password\r\n\r\nEverything else get default values"
      description: Create a new user through Registration
      x-stoplight:
        id: luhmvb6wah5g2
    parameters: [ ]
    get:
      summary: Get All Users
      tags: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                  x-stoplight:
                    id: z2pebcc4h3eny
      operationId: getUsers
      x-stoplight:
        id: 6csl7956pdx7w
      description: Get all users for Scoreboard
  '/users/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get User Info by User ID
      tags: [ ]
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    username: string
                    email: user@example.com
                    password: topSecret999!
                    createdAt: '2019-08-24T14:15:22Z'
                    scores:
                      Streak: 0
                      lastPlayed: '2019-08-24'
                      LongestStreak: 0
                      dailyScore:
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
        '404':
          description: User Not Found
      operationId: getUserById
      description: ''
      x-stoplight:
        id: fbx1jeknya520
    put:
      summary: Update User by User ID
      tags: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User Not Found
        '409':
          description: Username/Email already exists
      operationId: putUserById
      x-stoplight:
        id: ff9wv7hwpmr7f
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  x-stoplight:
                    id: o67og4fxnpn48
                password:
                  type: string
                  x-stoplight:
                    id: os478zzgd9egn
                email:
                  type: string
                  x-stoplight:
                    id: 68d1pf9t1eqhg
        description: "The user can optionally update their username, email, or password. \r\nWe need to ensure that empty input fields are handled properly to prevent the database from being updated with empty values."
      parameters: [ ]
    delete:
      summary: Delete User by User ID
      tags: [ ]
      responses:
        '204':
          description: No Content
      operationId: deleteUserById
      x-stoplight:
        id: jxryiatuqj5xr
  '/users/name/{username}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
    get:
      summary: Get User Info by Username
      tags: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
      operationId: getUserByUsername
      x-stoplight:
        id: ek7jipxzq1u6x
      description: for searching a specific user in scoreboard
  '/scores/{userId}':
    put:
      summary: Update Score by User ID
      tags: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scores'
      operationId: putScoresByUserId
      x-stoplight:
        id: ocffdx3ewcbtw
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scores'
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
  '/characters/{_id}':
    parameters:
      - schema:
          type: integer
        name: _id
        in: path
        required: true
    get:
      summary: Get Character Info by Id
      tags: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Characters'
      operationId: getCharacterById
      x-stoplight:
        id: 2ibel5gzrue0g
      description: Get character for classic mode
  /characters:
    get:
      summary: Get All Characters
      tags: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Characters'
                  x-stoplight:
                    id: rxg3p6uuglehb
      operationId: getCharacters
      x-stoplight:
        id: anzq93pzyeipt
      description: Get all characters to use its name for the Answer-SelectControl-Options
components:
  schemas:
    User:
      title: User
      type: object
      x-stoplight:
        id: qkyoptgslgwt1
      examples:
        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          username: string
          email: user@example.com
          password: topSecret999!
          createdAt: '2019-08-24T14:15:22Z'
          scores:
            Streak: 0
            lastPlayed: '2019-08-24'
            LongestStreak: 0
            dailyScore:
              - 0
              - 0
              - 0
              - 0
              - 0
      required:
        - id
        - username
        - email
        - password
      properties:
        id:
          type: string
          description: Unique identifier for the given user.
          x-stoplight:
            id: rh2u6uqm096v2
          format: uuid
        username:
          type: string
          x-stoplight:
            id: kddln0ig5o6ov
        email:
          type: string
          format: email
          x-stoplight:
            id: 8cperjwnsx88z
        password:
          type: string
          format: password
          example: topSecret999!
          x-stoplight:
            id: c64wggf2hpjeb
          minLength: 8
        createdAt:
          type: string
          format: date-time
          description: The date that the user was created.
          x-stoplight:
            id: xteqnrtwn4pyh
        scores:
          $ref: '#/components/schemas/Scores'
          x-stoplight:
            id: ef9zxmbp9qg5v
    Scores:
      title: Scores
      x-stoplight:
        id: pulqoicjwrbyp
      type: object
      properties:
        lastPlayed:
          type: string
          x-stoplight:
            id: b9703h5eyehpb
          format: date
          description: Erstellungsdatum des Accounts
        Streak:
          type: integer
          x-stoplight:
            id: zbmyv22eim06b
          description: "deafult 0\r\n"
        LongestStreak:
          type: integer
          x-stoplight:
            id: 942pon3y9061b
          description: deafult 0
        dailyScore:
          type: array
          x-stoplight:
            id: ltp8ngi9niqt7
          description: deafult 0
          items:
            x-stoplight:
              id: gciy0fhxlbsez
            type: integer
      examples:
        - lastPlayed: '2019-08-24'
          Streak: 0
          LongestStreak: 0
          dailyScore:
            - 0
    Characters:
      title: Characters
      x-stoplight:
        id: uu303wc29c4gp
      type: object
      required:
        - name
        - gender
        - origin
        - status
        - religion
        - house
        - seasons
      properties:
        _id:
          type: integer
          x-stoplight:
            id: zg46lbxw2oztn
        name:
          type: string
          x-stoplight:
            id: 7ph7ardk4z1v6
        gender:
          type: string
          x-stoplight:
            id: twihrsd9u0kgt
        born:
          type: string
          x-stoplight:
            id: fwy3mesqvrdom
        origin:
          type: string
          x-stoplight:
            id: hr1jx46ut83sj
        death:
          type: string
          x-stoplight:
            id: s7nxs05sxbwdf
        status:
          type: string
          x-stoplight:
            id: neet1u4xr4rv3
        culture:
          type: string
          x-stoplight:
            id: hipd8nntmppu0
        religion:
          type: string
          x-stoplight:
            id: ywyf1hjzqswff
        titles:
          type: array
          x-stoplight:
            id: bpqry4zs819aj
          items:
            x-stoplight:
              id: lqxpc0pzi9nd2
            type: string
        house:
          type: string
          x-stoplight:
            id: zpr49d4m5s6p2
        father:
          type: string
          x-stoplight:
            id: 1lqq8dhwsmsjr
        mother:
          type: string
          x-stoplight:
            id: wzgy7ftvmyiah
        spouse:
          type: array
          x-stoplight:
            id: 1iob1pshytk80
          items:
            x-stoplight:
              id: ja0fuelkatc04
            type: string
        children:
          type: array
          x-stoplight:
            id: q43no97q1y4l9
          items:
            x-stoplight:
              id: mn8hyryzjow0a
            type: string
        siblings:
          type: array
          x-stoplight:
            id: iixlumjz6v4b1
          items:
            x-stoplight:
              id: ogj14yc4ezird
            type: string
        lovers:
          type: array
          x-stoplight:
            id: 59yp51czv660j
          items:
            x-stoplight:
              id: hg9eftfxdt21z
            type: string
        seasons:
          type: array
          x-stoplight:
            id: at5h4yrpu15pn
          items:
            x-stoplight:
              id: 4b68yavzzvsyf
            type: integer
        actor:
          type: string
          x-stoplight:
            id: 1b89byvk1w940
